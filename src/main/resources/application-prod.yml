spring:
  # Database configuration
  datasource:
    url: ${JDBC_DATABASE_URL}
    username: ${JDBC_DATABASE_USERNAME}
    password: ${JDBC_DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # Mail configuration for production
  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          timeout: 5000
          connection-timeout: 5000
          write-timeout: 5000
    default-encoding: UTF-8

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        show_sql: false
        # Performance optimizations for production
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
        connection.provider_disables_autocommit: true

  # Flyway configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration

  # Disable SQL initialization
  sql:
    init:
      mode: never

  # Enhanced async task execution configuration
  task:
    execution:
      pool:
        core-size: 10
        max-size: 20
        queue-capacity: 200
      thread-name-prefix: secure-bank-prod-

  # Caching configuration for production
  cache:
    type: caffeine
    caffeine:
      spec: maximumSize=10000,expireAfterWrite=3600s

# JWT configuration
jwt:
  secret: ${JWT_SECRET}
  expiration: 86400

# Server configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,application/javascript
    min-response-size: 2048
  error:
    include-stacktrace: never
    whitelabel:
      enabled: false
  # Tomcat tuning for production
  tomcat:
    max-threads: 200
    max-connections: 10000
    accept-count: 100
    min-spare-threads: 20
    max-keep-alive-requests: 100
    connection-timeout: 20000
    accesslog:
      enabled: true
      directory: /tmp
      pattern: "%t %a \"%r\" %s (%D ms)"

# Actuator endpoints for monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
      probes:
        enabled: true
  health:
    db:
      enabled: true
    diskspace:
      enabled: true

# Logging configuration optimized for production
logging:
  level:
    root: INFO
    com.application.secureBank: INFO
    org.springframework: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /tmp/securebank.log
    max-size: 10MB
    max-history: 7

# CORS configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://secure-bank-sb.vercel.app, http://localhost:4200}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: Authorization,Content-Type,X-Requested-With
  allow-credentials: true